version: "3.8"

services:
  github-workflows-kts:
    image: krzema12/github-workflows-kt-jit-binding-server:latest
    healthcheck:
      test: [ "CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' -L http://localhost:8080/status | grep -q 200" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - otel_collector
    networks:
      - reverse_proxy
    labels:
      caddy: bindings.krzeminski.it, github-workflows-kt-bindings.colman.com.br
      caddy.reverse_proxy: "{{upstreams 8080}}"
      dozzle: "yes"

    environment:
      - GITHUB_TOKEN

  jaeger:
    image: jaegertracing/all-in-one:latest
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider -q http://localhost:16686 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_NAMESPACE=${PROMETHEUS_QUERY_NAMESPACE:-}
      - PROMETHEUS_QUERY_DURATION_UNIT=${PROMETHEUS_QUERY_DURATION_UNIT:-}
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
    labels:
      caddy: jaeger.github-workflows-kt-bindings.colman.com.br
      caddy.reverse_proxy: "{{upstreams 16686}}"
      caddy.basic_auth: "* bcrypt"
      caddy.basic_auth.admin: "JDJhJDEyJHdIU0tJTG45clVDcHQuUmdIN3dvd09ub2VqSDdhakkyL0ZkNnI5OS5XQ2NkTzdHSVNkYmpP"

  otel_collector:
    networks:
      reverse_proxy:
        # An abstract host name, used by the application. Allows abstracting
        # out what component is the receiver of traces.
        aliases: [traces_collector]
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - "./otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml"
    command: --config /etc/otelcol/otel-collector-config.yml
    depends_on:
      - jaeger
    ports:
      - "8889:8889"

  prometheus:
    networks:
      - reverse_proxy
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - dozzle:/data
    networks:
      - reverse_proxy
    labels:
      caddy: logs.github-workflows-kt-bindings.colman.com.br
      caddy.reverse_proxy: "{{upstreams 8080}}"
    environment:
      DOZZLE_AUTH_PROVIDER: simple
      DOZZLE_FILTER: label=dozzle=yes


networks:
  reverse_proxy:
    external: true

volumes:
  dozzle: { }
