# dclint disable require-project-name-field
services:
  github-workflows-kts:
    image: github-workflows-kt-jit-binding-server # dclint disable-line
    environment:
      - GITHUB_TOKEN
    depends_on:
      - traces_collector
    networks:
      - caddy
      - default
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -o /dev/null -w '%{http_code}' -L
            http://localhost:8080/status | grep -q 200"
        ]
    labels:
      caddy: bindings.krzeminski.it
      caddy.reverse_proxy: "{{upstreams 8080}}"
  
  traces_collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config", "/etc/otel/otel-config.yaml" ]
    configs:
      - source: otel-config
        target: /etc/otel/otel-config.yaml

  prometheus:
    image: prom/prometheus:latest
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-remote-write-receiver"
    configs:
      - source: prometheus
        target: /etc/prometheus/prometheus.yml

  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - METRICS_BACKEND=prometheus
      - PROMETHEUS_SERVER=http://prometheus:9090
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true

  grafana:
    image: grafana/grafana
    networks:
      - caddy
      - default
    labels:
      caddy: grafana.colman.com.br
      caddy.reverse_proxy: "{{upstreams 3000}}"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - jaeger

networks:
  caddy:
    external: true

configs:
  otel-config:
    external: true
  prometheus:
    external: true

volumes:
  grafana_data: